# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-09 14:20
from __future__ import unicode_literals

import barbados.barbadosdb.models
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('birth_date', models.DateField(blank=True, default=None, null=True)),
                ('phone_number', barbados.barbadosdb.models.PhoneNumberField(max_length=24)),
                ('street_address', models.TextField(blank=True, default=None, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('country_code', models.CharField(blank=True, default=b'FI', max_length=2, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Berth',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Boat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_index=True, default=b'', max_length=64)),
                ('boat_type', models.CharField(blank=True, choices=[(b'', b'--------'), (b'M', b'Motorboat'), (b'S', b'Sailboat')], db_column='type', default=b'', max_length=1)),
                ('model', models.CharField(blank=True, default=b'', max_length=64)),
                ('manufacturer', models.CharField(blank=True, default=b'', max_length=64)),
                ('registration_number', barbados.barbadosdb.models.RegistrationNumberField(blank=True, default=b'', max_length=6)),
                ('sail_number', models.IntegerField(blank=True, default=None, null=True)),
                ('boat_certificate_number', models.IntegerField(blank=True, default=None, null=True)),
                ('length', models.IntegerField(blank=True, default=None, null=True)),
                ('beam', models.IntegerField(blank=True, default=None, null=True)),
                ('height', models.IntegerField(blank=True, default=None, null=True)),
                ('draught', models.IntegerField(blank=True, default=True, null=True)),
                ('weight', models.IntegerField(blank=True, default=True, null=True)),
                ('material', models.CharField(blank=True, choices=[(b'', b'--------'), (b'F', b'Fibreglass'), (b'W', b'Wood'), (b'M', b'Metal'), (b'O', b'Other')], default=b'', max_length=1)),
                ('colour', models.CharField(blank=True, max_length=16)),
                ('inspection_class', models.IntegerField(blank=True, choices=[(None, b'--------'), (1, b'Offshore'), (2, b'Coastal'), (3, b'Archipelago')], default=None, null=True)),
                ('inspection_year', barbados.barbadosdb.models.InspectionYearField(blank=True, default=None, null=True)),
                ('hull_inspection_year', barbados.barbadosdb.models.InspectionYearField(blank=True, default=None, null=True)),
                ('insurance_company', models.CharField(blank=True, default=b'', max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Harbour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=64)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barbadosdb.Club')),
            ],
        ),
        migrations.CreateModel(
            name='Jetty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=2)),
                ('harbour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barbadosdb.Harbour')),
            ],
        ),
        migrations.AddField(
            model_name='berth',
            name='boat',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='barbadosdb.Boat'),
        ),
        migrations.AddField(
            model_name='berth',
            name='jetty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barbadosdb.Jetty'),
        ),
        migrations.AlterUniqueTogether(
            name='jetty',
            unique_together=set([('harbour', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='berth',
            unique_together=set([('jetty', 'name')]),
        ),
    ]
